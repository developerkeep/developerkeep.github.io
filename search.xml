<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Đánh thức ý thức bản thân</title>
      <link href="/2019/09/17/Danh-thuc-y-thuc-ban-than/"/>
      <content type="html"><![CDATA[<p><img src="self-concious.jpg" alt=""></p><p>Khi học về tính cách con người Việt Nam phát hiện ra có 5 đặc điểm chính thì trong đó có 1 đặc điểm cực kỳ nguy hiểm đó là dễ thỏa mãn cực kỳ. Khi mang trong mình nỗi đau, đói khổ thì tự giác vươn lên nhưng lúc đỡ đỡ đói đỡ khổ thì hết ý chí. Vượt khổ thì rất tốt nhưng vượt khổ xong rồi là thôi không vượt gì nữa!</p><p>Không phải ngẫu nhiên ngày xưa ông cha ta đánh giặc ngoại xâm thậm chí là chống bạo quốc thì chiến thắng vẻ vang, còn thời bình thì kinh tế không thắng nổi ai. Không phải ngẫu nhiên mà những tấm gương nghèo học giỏi lóe sáng lên rồi vụt tắt mà sau đó chẳng bao giờ nghe nói về một tấm gương nghèo vừa vượt khó học giỏi và vừa là tấm gương làm giàu trở thành tỷ phú, hay ít ra là các chuyên gia hàng đầu thế giới. Vậy tại sao?</p><p>Là do vượt khổ xong rồi thỏa mãn thì chỉ dừng lại ở đó đó. </p><h2 id="Neu-khong-dung-lai-o-vuot-kho-thi-lam-gi-nua"><a href="#Neu-khong-dung-lai-o-vuot-kho-thi-lam-gi-nua" class="headerlink" title="Nếu không đừng lại ở vượt khổ thì làm gì nữa?"></a>Nếu không đừng lại ở vượt khổ thì làm gì nữa?</h2><p>Hết khổ thì sướng, nên đương nhiên hết vượt khổ thì vượt sướng thôi. Vượt sướng là vượt qua sự thỏa mãn sung sướng hiện tại để tiến xa hơn nữa. </p><p>Phải công nhận rằng vượt sướng lại khó hơn vượt khổ. Vượt khổ dễ bởi vì kẻ thù rõ mồn một, vấn đề hiện ra ngay trước mắt còn vượt sướng thì kẻ thù không có, vấn đề thì quá mơ hồ. Không phải vượt khổ xong thì sẽ đứng ở trên đỉnh cao luôn mà vượt khổ chỉ là vừa mới bước qua một bậc thang, bậc thang tiếp theo là vượt sướng còn cao hơn!</p><p>Thế giới đã có nhiều người tìm cách vượt sướng. Điển hình như ngày xưa Việt Vương Câu Tiễn nằm gai nếm mật, Gary Vee mỗi ngày đề tượng tượng rằng mình vừa mới mất đi hết cả 4 người thân trong gia đình, Steve Job tưởng tượng ngày mai mình chết. Có thể họ làm như thế không phải hoàn toàn là vượt sướng như mình nghĩ, có thể là hơn thế. Nhưng chung quy lại thì ở con người có một một thứ gọi là ý thức bản thân, bản chất của việc thỏa mãn như nói ở trên chính là việc ý thức ngủ quên. </p><h2 id="Do-nguy-hiem-cua-viec-khoi-day-y-thuc-ra-sao"><a href="#Do-nguy-hiem-cua-viec-khoi-day-y-thuc-ra-sao" class="headerlink" title="Độ nguy hiểm của việc khơi dậy ý thức ra sao?"></a>Độ nguy hiểm của việc khơi dậy ý thức ra sao?</h2><p>Bạn đã bao giờ nghe trên mạng nhiều người chửi kiểu: “NÓI DÂN TRÍ THẤP LẠI TỰ ÁI, Ý THỨC NHƯ CỦ CẢI MÀ Bla bla bla…” chưa? Chỉ 1 xíu đụng đến tự ái làm khơi dậy ý thức thì người ta có thể xù lên mà chửi nhau đó.</p><p>Trong xã hội sung sướng bây giờ, chỉ có người có ý thức mới thấy nỗi khổ mà vươn lên, còn những người đang thỏa mãn với cuộc sống sẽ thấy cuộc đời luôn tươi đẹp. Những người có ý thức mới thấy được vấn đề cần giải quyết, họ giải quyết vấn đề và nâng chất lượng cuộc sống lên, đó cũng chính là những điều mà các founder của các startup đang làm hoặc đối với các nhà kinh doanh thì hay nói là ở đâu cũng thấy tiền. Những người tự giác ý thức trong xã hội này mới là những người thực sự nguy hiểm! </p><h2 id="Ket"><a href="#Ket" class="headerlink" title="Kết"></a>Kết</h2><p>Bản thân mình cũng hay vui vẻ mỗi ngày mà ít khi nghiêm túc sau lần vượt khổ đậu đại học, và mình thấy có một mối quan hệ tuyến tính nào đó giữa sự nghiêm túc và tự ý thức vì theo quan sát vào miệng giếng của mình nhìn thấy, đa số những người nghiêm túc thường làm được gì đó tiến xa hơn những người luôn vui vẻ suốt ngày. Do đó mình cũng cần vượt sướng nên bây giờ ý tưởng vượt sướng của mình đó là tưởng tưởng những người bạn chơi với mình bao lâu nay chúng nó khinh thường mình mà bây giờ mình mới biết ^_^</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Được gì sau hơn chục năm chơi game?</title>
      <link href="/2019/09/12/Duoc-gi-sau-hon-chuc-nam-choi-game/"/>
      <content type="html"><![CDATA[<p><img src="play-game.jpg" alt=""></p><p>Mình đã chơi các game như pikachu, cướp đường phố, võ lâm truyền kỳ 1, võ lâm truyền kỳ 2, phong thần, kiếm thế, đế chế, half-life, Dota2, thục sơn kỳ hiệp,vv. Xem những phim về game như: sword art online 1, sword art online 2, toàn chức cao thủ, vv. Kết bạn và follow hàng loạt cao thủ chơi game, xem hàng tá clip game, vv. Đọc hàng trăm bài phân tích, bình luận về game. Cuối cùng là thiệt hại ngân sách hàng tỷ đồng (chém tý :D) trong suốt thời gian từ cấp 2 đến giờ và hiện tại mình không chơi game nào nữa. Nhìn lại rút ra được một số cái lợi như sau:</p><h2 id="Xa-stress"><a href="#Xa-stress" class="headerlink" title="Xả stress"></a>Xả stress</h2><p>Rõ ràng, khi nhắc đến chơi game thì mọi người nghĩ ngay tới mục đích để xả stress sau những lúc căng thẳng. </p><p><img src="og.gif" alt=""></p><p>Hồi đi thực tập, mình chơi trò đế chế với một nhóm bạn và sau đó cùng nhóm bạn chuyển qua chơi dota 2. Quả thực, cứ đến cuối tuần làm việc mệt nhọc lại setup một kèo chơi game thì không còn gì bằng vì cái cảm giác ngày cuối tuần đã đến, bung lụa setup kèo và chơi thôi nó sung sướng đến nỗi quên hết những mệt nhọc của tuần vừa qua, được la hét, chửi bới, cà khịa…, nó còn tạo nên chuyện để tuần tiếp theo anh em bàn tán, chém gió và những lúc đó lại lôi 1 con gà trong team ra để làm vật tế cho đại hội làm nhục, cảm giác lúc đó sung sướng làm sao!!!  </p><h2 id="Co-them-ban-be"><a href="#Co-them-ban-be" class="headerlink" title="Có thêm bạn bè"></a>Có thêm bạn bè</h2><p>Dĩ nhiên, các trò chơi sẽ giúp gắn kế con người, không phải ngẫu nhiên mà bóng đá là môn thể thao vua mà là vì nó thu hút lượng nguời hâm mộ đông nhất thế giới.<br>Như mình nói ở trên, mình có một team chơi game và đến giờ vẫn còn giữ liên lạc. Éo hiểu sao vẫn giữ liên lạc với mấy ông đực rựa đó nữa. LOL =))</p><p>Riêng với mình thì số lượng mối quan hệ có được từ chơi game khá khiêm tốn, nhưng có một số người chơi game còn có cả một lượng fan nhất định. Như với một số người lại khác, thằng bạn bảo ở trường cấp 3 ổng, ai chơi game giỏi đi đâu cũng được nể và nhìn với con mắt khác. Nhiều hơn nữa, mấy ông idol chơi game rồi stream còn có cản ngàn người theo dõi, có cả một cộng đồng. Thời nay, những người đó không khác gì các ca sỹ, nghệ sỹ nổi tiếng cả.</p><h2 id="Mindset"><a href="#Mindset" class="headerlink" title="Mindset"></a>Mindset</h2><p>Có lẽ thứ mình được nhiều nhất và muốn viết nhiều nhất đó chính là mindset. Để mình phân tích cho bạn về cách tư duy mà mình học được và nó ảnh hưởng như thế nào đến cuộc sống mình. Sao mình lại đánh giá cao nó vậy. Nhưng trước hết, để mình nói về một số tư duy cơ bản đã:</p><h3 id="Thai-do-choi-game"><a href="#Thai-do-choi-game" class="headerlink" title="Thái độ chơi game"></a>Thái độ chơi game</h3><p>Thái độ làm nên tất cả, có 2 thái độ khi chơi game. Thứ nhất là chơi game xả stress như mình viết ở đầu. Tuy nhiên, bạn có thấy có những lúc chơi game xong bạn lại cay cú, đập bàn đập ghế, đập bạn thân (LOL), hay cay quá ngủ không được không? </p><p><img src="cay-cu.jpg" alt=""></p><p>Vì có những người có thái độ chơi game thứ hai đó là chơi game cho giỏi. Hầu hết mọi người đều không phân biệt được 2 thái độ này, họ lao vào chơi theo bản năng, nghe theo bạn bè nhưng không xác định rõ thái độ của mình là muốn chơi xả stress hay chơi cho giỏi. Người muốn chơi xả stress cho vui, coi thắng thua không quan trọng còn người muốn chơi cho giỏi thì rất quan trọng việc thắng thua, hơn kém. Điều đó dẫn đến nhiều lúc cãi lộn nhau.</p><p>Chuyện sẽ dễ dàng nếu ai cũng xác định được thái độ của mình và thẳng thắn nói cho nhau thì mọi chuyện sẽ giải quyết êm đẹp phải không? Kiểu như t thích chơi để xả stress thôi, m muốn chơi với t cho vui hay để thắng? nếu chơi cho vui thì t chơi, không thì nghỉ. OK? </p><p>Thực tế lại không vậy, người ta lẫn lộn hoặc không xác định rõ thái độ của mình. Người có thái độ thứ 1 nhưng lại muốn có thành quả tốt như người có thái độ thứ 2. Người có thái độ 2 lại không chấp nhận được người có thái độ một mà muốn họ phải như mình, ép họ phải chơi khổ sở như mình để thắng… Người nào rơi vào tình trạng không xác định thì rất giống kẻ hời hợt, cà chớn, giỏi không giỏi, chơi thì cứ chơi nhiều. Đó cũng là lỗi nghiêm trọng mình mắc phải trước đây!</p><h3 id="Ham-muc-tieu-cua-game"><a href="#Ham-muc-tieu-cua-game" class="headerlink" title="Hàm mục tiêu của game."></a>Hàm mục tiêu của game.</h3><p>Bỏ qua thái độ chơi game để giải trí đi. Vì nó không có gì đáng nói. Giờ ta tập trung vào tư duy chơi game để giỏi lên. </p><p>Một trong số việc cần làm để chơi game giỏi lên đó chính là phải xác định được hàm mục tiêu của game là gì. Hàm mục tiêu của bất cứ game nào cũng là hàm đa biến: tỷ lệ thắng = f(x0, x1, x2, … , xn). Trong đó các x là các nhân tố ảnh hưởng đến tỷ lệ thắng, các nhân tố này có thể là kỹ năng cá nhân, chiến thuật, tâm lý, vv. Đa số chúng ta không có nhận thức về hàm mục tiêu cũng như không biết các nhân tố ảnh hưởng đến kết quả của hàm mục tiêu. Trước đây mình cũng phạm lỗi nghiêm trọng này. Để mình nói kỹ hơn về lỗi này của mình như là một ví dụ sau.</p><p>Ví dụ: Trước đây mình chơi dota2, khi vào game mình thích cảm giác giết player khác. Chỉ số giết càng lớn, chỉ số chết càng ít thì càng “ngầu”. Đa số đại hội làm nhục của team mình chơi đều chú trọng vào cái này: nào là m feed như chó, 4 vs 6, m tạ vl, và những blame đó để lấy chỉ số giết/chết ra làm cơ sở. </p><p><img src="kill-dead.jpg" alt=""></p><p>À vâng, hồi đó trình độ rank tầm 1k chứ mấy =)). </p><p>Nhưng ở ví dụ đó, ngay từ đầu mình đã không ý thức được hàm mục tiêu của game cũng như thái độ của mình. Mình cũng được ăn hành kha khá và được bách nhục xuyên tâm khá nhiều, và như một hệ quả của ngu dốt cộng với nhiệt tình, mình đã lao vào xem các pro khác chơi, ngồi xem highlight xử lý nhanh như chớp của họ… để học xử lý tay nhanh, vâng học được đến nỗi tay nhanh hơn não cơ =)). Rồi bạn biết rồi đó, mình vẫn ăn hành, lúc chơi thì bấm loạn cả lên, những lúc nguy hiểm là nghe theo thằng ngồi cạnh chỉ luôn, nó bảo làm gì làm nấy luôn, não dừng suy nghĩ luôn. Thật tệ hại, thảm bại, loser phải không?</p><p>Quay lại với hàm mục tiêu, với dota2, hàm mục tiêu để thắng sẽ gồm nhiều yếu tố chính như: kiến thức về game, chiến thuật, kỹ năng thao tác, tâm lý, teamwork…, để thắng, ta phải hội tụ những nhân tố đó và sử dụng nó sao cho hàm mục tiêu đạt cao nhất. Nghĩa là bạn vào game làm cái éo gì cũng được, miễn sao tỷ lệ thắng cao nhất. Và sai lầm của mình như ví dụ trên đó là chỉ tập trung vào 1 nhân tố duy nhất đó là kỹ năng thao tác! Còn các nhân tố còn lại hầu như bằng 0: ngại tìm hiểu về các nhân vật trong game, chỉ tự tin chơi một vài tướng và không thử tướng mới, không biết chiến thuật gì cả, cảm xúc tâm lý thì lúc nào cũng cao (cảm xúc là kẻ thù số 1 của thành công), không có phối hợp để ý gì đến đồng đội, bala. </p><p>Mình nhận thức được điều này cũng khá lâu rồi, sau đó mình sửa lại hàm mục tiêu của mình và không lâu sau thì thì từ 1k lại lên được hơn 2k dễ dàng. Tất nhiên là mỗi nhân tố mình liệt kê trên sẽ có rất nhiều nghệ thuật áp dụng, để viết hết nghệ thuật đó ra chắc chắn là tốn nhiều giấy mực, nếu mình chơi tiếp mình sẽ vẫn lên được rank nữa vì càng ngày mình càng nghĩ ra nhiều nghệ thuật trong các nhân tố đó. Đơn cử 1 ví dụ như khi xem kênh của thằng #kemchodien, mình phát hiện ra thằng này rất toxic, nhưng lại rank rất cao, thằng này cứ vào game là hay chửi, mà trước giờ mình gặp thằng nào toxic cũng là thằng chơi ngu, cancer rank thấp. Mình về sau mình phát hiện ra hắn ta chửi nhưng có mục đích, hắn chỉ chửi thành viên team đối thủ, tuyệt đối không bao giờ chửi đồng đội! Cho dù mồm vẫn lẩm bẩm chửi nó như chó nhưng vẫn chat lên mặt cười. Chính đó là một nghệ thuật để giữ hàm mục tiêu đạt giá trị cao, chửi đối thủ để đối thủ mất bình tĩnh, còn đối với team mình thì nhịn nhục hết cỡ để làm sao giữ được cho đồng đội bình tĩnh. Một nghệ thuật đơn giản phải không? </p><p>Nói chung khi ta có ý thức về hàm mục tiêu chơi game, thì ta làm cái vẹo gì cũng được, miễn sao hàm mục tiêu đạt giá trị cao thì tỷ lệ thắng sẽ cao. </p><h3 id="Luyen-tap"><a href="#Luyen-tap" class="headerlink" title="Luyện tập"></a>Luyện tập</h3><p>Người chơi nhiều chưa chắc đã giỏi, và nguời chơi giỏi chưa chắc đã chơi nhiều. Có 2 công thức để thành tài: 1 là quy tắc 10 ngìn giờ và 2 là không được phạm lỗi đã từng mắc. Tức là khi luyện tập để giỏi hơn cần 2 yếu tố là thành thạo và cải tiến. </p><p>Quy tắc 10 ngàn giờ được biết đến khi bạn chơi một cái nhạc cụ nào đó, thường thì sẽ cần độ thành thạo và cảm xúc. Mình trước đây luyện tập cứ lao vào chơi game này qua game khác, có hôm thua nhiều cú quá là cứ chơi đến sáng luôn, nhưng game nào cũng chơi vì cảm xúc thắng thua, còn việc mình phạm phải lỗi gì và đã sửa được chưa thì không quan tâm. Như vậy mình có thể đạt được mục tiêu 10 ngàn giờ nhưng sẽ không bao giờ thành tài được. Mình chỉ sẽ là 1 nguời thành thạo thao tác chơi chứ không phải chơi giỏi. Điều này sẽ đẻ ra được 1 thằng cancer tay nhanh hơn não mà thôi.</p><h3 id="Cam-xuc"><a href="#Cam-xuc" class="headerlink" title="Cảm xúc"></a>Cảm xúc</h3><p>Vâng, cảm xúc là kẻ thù số một của thành công (Lê Thẩm Du, nhầm Dương). </p><p>Nhiều lúc động lực chơi game để có thể ngồi hàng giờ đó là cảm xúc giết chóc và thắng thua, đôi khi run run chẳng hạn như thắng được 2 ván rồi giờ chơi thêm ván nữa thì sợ sợ sẽ bị thua tụt rank. </p><p>Cũng vì cảm xúc mà xem stream game của những thắng khác cả ngày không chán. Khi xem stream đó ta có đang học tập các chiến thuật hay không? có chịu khó phân tích các tính huống, đoán họ sẽ xử lý gì tiếp theo hay không, hay đơn giản chỉ là ngồi xem, chỉ xem, thấy idol bị một thằng chửi sau đó idol đánh và comback lại rồi chửi lại nó là thấy sướng… </p><p>Tất cả chỉ vì cảm xúc nhưng sau đó có làm bạn giỏi hơn không? Không! Nó sẽ dắt mũi ta tốn thời gian và sức khỏe vào những thứ đi qua như một câu chuyện mà không đọng lại được gì. Cuối cùng mình vẫn gà. </p><p>Mình cụng lạ là mình hồi trước cũng thuộc cái đám sống vì cảm xúc đó. Rảnh háng =))</p><h3 id="Ky-luat"><a href="#Ky-luat" class="headerlink" title="Kỷ luật"></a>Kỷ luật</h3><p>Tất cả những gì làm bạn bỏ công sức để chơi hàng giờ một cách vui vẻ đó là do cảm xúc. Thế còn ngày nào cũng dành chừng ấy thời gian để chơi game đều đặn và những lúc chơi game không cảm thấy vui vẻ, chơi game thấy mệt mỏi, nhưng ta vẫn chơi thì sao? Đó là nhờ vào tính kỷ luật. </p><p>Các pro player đều phải có tính kỹ luật này. Ví dụ như mình đượng biết thì player #minhnhannguyen của dota2 hằng ngày dành vài tiếng vào chế độ test để test tướng, thử các kỹ thuật. Những việc làm này lặp đi lặp lại và nó rất đau đớn, chán nản. Nhưng mà no pain no gain. Nếu không có sự kỷ luật và nghiêm túc thì ta vẫn chỉ là đứa hời hợt, không đâu vào đâu cả!</p><p>Tóm lại, xác định hàm mục tiêu, luyện tập, loại bỏ cảm xúc, tăng tính kỷ luật là một số tư duy cơ bản quan trọng nhất tọa nên mindset chơi game. Tất nhiên còn nhiều tư duy cơ bản khác nữa nhưng ít quan trọng hơn. </p><h2 id="Ket"><a href="#Ket" class="headerlink" title="Kết"></a>Kết</h2><p>Chơi game đen lại cho mình nhiều thứ rất quan trọng như mối quan hệ bạn bè, tư duy. </p><p>Khi học được mindset này trong game, mình đã áp dụng điều này vào trong cuộc sống và thấy nó không những hiệu quả trong game mà còn hiệu quả cả ở cuộc đời. Hóa ra cuộc đời cũng là một trò chơi mà hàm mục tiêu là tạo ra thành công? còn thành công như thế nào thì tùy định nghĩa của xã hội và của mỗi người đó? Mình không chắc nhưng đối với mình thì mình tin vậy. Đó là lý do mình nói từ đầu, chơi game giúp mình có mindset này và nó rất quan trọng với mình</p><p>Hiện tại thì mình không chơi game thường xuyên nữa? tại sao chơi game có nhiều lợi ích vậy mà mình không chơi thường xuyên nữa? Là bởi hàm mục tiêu cuộc sống của mình sẽ giảm giá trị nếu mình chơi game quá nhiều trong khi sự nghiệp của mình không phải là trở thành game thủ chuyên nghiệp. Nhưng hàm mục tiêu sự nghiệp của mình cũng không cao hơn nếu mình loại bỏ hẳn game ra khỏi cuộc đời. Vì thế nếu như ai đó rủ mình chơi game thì có lẽ mình vẫn chơi, vì xả stress, vì mối quan hệ bạn bè, vì động não, thực nghiệm mindset! </p><p>Nhân tiện gửi tới mấy ông đực rựa chơi game cùng, dm các ông, các ông làm tôi phải suy nghĩ nhiều rồi đó =))</p>]]></content>
      
      
        <tags>
            
            <tag> life, mindset </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Khi chiếc lá cuối cùng rơi xuống, mình sẽ thôi post bài tào lao</title>
      <link href="/2019/02/12/Khi-chiec-la-cuoi-cung-roi-xuong-thi-blog-nay-se-thoi-post-bai-tao-lao/"/>
      <content type="html"><![CDATA[<h1 id="Vang-y-troi"><a href="#Vang-y-troi" class="headerlink" title="Vâng, ý trời!"></a>Vâng, ý trời!</h1><p><img src="chiec-la-cuoi-cung-troll.png" alt=""></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Phim inception xoắn não quăn tít</title>
      <link href="/2019/02/07/Phim-inception-xoan-nao-quan-tit/"/>
      <content type="html"><![CDATA[<p><img src="dream-in-a-dream.png" alt=""></p><p>Inception – một bộ phim của Nolan được cho là “hack não người xem” với việc làm cho người xem liên tục sử dụng não để suy luận trong phim thì bộ phim xứng đáng để xem cho những ai yêu thích sức mạnh của suy luận.</p><p>Từ lâu, những bộ phim mang mác “hack não” luôn gây hấp dẫn đặc biệt cho mình, hơn nữa “hack não” + hành động thì vô cùng hấp dẫn. Nó như một chất gây nghiện mà khi dính vào rồi thì khó bỏ mà cứ càng ngày càng cần liều mạnh hơn =)) Nhân dịp mồng 2 tết 2019 ở nơi đất khách quê người không làm gì ngoài xem phim, mình đã tranh thủ xem Inception và nhân tiện viết review vì bộ phim rất hay.</p><p>Suy luận không chỉ đơn thuần mọi thứ phải đúng với thực tại như trong toán học 1+1 = 2. Mà ngoài ra suy luận trong một không gian tưởng tượng ra đó gọi là suy luận trong sự sáng tạo, đôi khi cũng có thể gọi là tào lao đối với những ai không thích sự tưởng tượng. Ví dụ như các bộ manga như Naruto, One piece chẳng hạn, nó gây nghiện bởi những thứ tưởng tượng trong cốt truyện nhưng lại vô cùng hợp lý về suy luận, các bộ skill của nhân vật có tính chất riêng, tương, khắc lẫn nhau dẫn đến những trận chiến mang tính chất xám nhiều mà đôi khi thắng thua không phải ở chỗ skill của ai có tính sát thương cao mà ở chỗ cách dùng skill của người đó như thế nào để tận dụng điểm yếu của đối phương. Nói ra ví dụ như thế để thấy đối với những người thích tưởng tượng thì suy luận trong sáng tạo không phải là thứ tào lao nhàm chán, mà là thứ tào lao vô cùng quyến rũ. Quay lại với Inception, đây là một bộ phim suy luận trong sự sáng tạo. Nếu ai chưa xem mình nghĩ nên xem trước rồi đọc review của mình sau để thử khả năng suy luận của bạn khi lần đầu xem phim, xem xong quay lại đọc review lại cũng chưa muộn nhé.</p><p>Đầu tiên là về sự sáng tạo trong phim. Inception khai thác thế giới trong mơ của con người mà tác giả sáng tạo thêm đó là: giữa hai người có thể “chia sẻ” giấc mơ với nhau và người ta có thể xây dựng thế giới trong mơ như ý muốn hoặc cấy thêm sự kiện vào trong giấc mơ. Hmm, có vẻ hơi khó hiểu phải không? Ta cùng từ từ làm rõ từng ý:</p><p>Chia sẻ giấc mơ giữa hai người hay nhiều người ở đây ý là hai hay nhiều người kết nối với nhau qua một cái máy và họ đồng thời cùng ngủ và cùng mơ, một người sẽ mơ giấc mơ của mình (owner) còn những người còn lại có thể xâm nhập vào giấc mơ của đó.<br>Trong giấc mơ, người chủ giấc mơ có thể sáng tạo ra mọi thứ trong thế giới đó, có thể bẻ cong trời đất hay tạo thêm những công trình, con người… trong khi đó người xâm nhập vào giấc mơ của người kia (owner) có thể lấy được cả thông tin của người đó trong quá khứ, đồng thời họ có thể cấy thêm các chi tiết vào trong giấc mơ của owner để họ tin rằng những thông tin đó là thật khi họ tỉnh dậy.<br>Inception là một khái niệm tiếng anh chỉ sự lồng vào nhau cái này trong cái kia theo kiểu đệ quy nhiều tầng. Inception ở bộ phim này ám chỉ mơ trong giấc mơ. Nếu mơ ở tầng 1 thì mơ trong giấc mơ ở tầng 2 và mơ trong giấc mơ của giấc mơ là tầng 3…</p><p>Khi càng đi sâu vào nhiều tầng thì thời gian càng dài hơn, tầng sâu hơn dài hơn khoảng 20 lần so với tầng trước đó. Ví dụ ở thực tế thời gian trôi 10 tiếng thì ở tầng 1 sẽ khoảng 200 tiếng (8 ngày 7 giờ), ở tầng 2 sẽ là 4000 tiếng (gần 6 tháng) và ở tầng 3 là 80000 tiếng (hơn 9 năm). Từ đây bạn có nghĩ sẽ tận dụng đặc điểm này để làm gì không? Nếu không hãy xem tiếp phần dưới xem các nhân vật chính đã tận dụng làm gì nhé? Điều đáng chú ý ở đây, càng đi sâu vào tầng ở dưới thì càng nguy hiểm và nếu để chết ở trong tầng sâu của giấc mơ thì có thể sẽ lạc vào thế giới hư không nào đó.</p><p>Để xác định mình có đang trong giấc mơ hay không thì phải sử dụng một vật gọi là tolem. Nhân vật chính sử dụng tolem là một con quay. Ở thế giới trong mơ, nơi mà trọng lực không như ở thế giới thật, con quay sẽ quay vô hạn mà không đổ.</p><p>Có một cách hơi mơ hồ để xác định mình đang mơ hay không là thử xem hiện tại của mình đến từ đâu. Thông thường khi mơ, ta không bao giờ biết được từ đâu mà đến, đâu là bắt đầu.</p><p>Người ở tầng này sẽ báo hiện cho người ở tầng trong bằng cách cho người ngoài nghe nhạc. Để đánh thức một người thì ta phải đánh thức từ tầng sâu nhất trở ra bằng cách cho nghe một bản nhạc rồi tạo một cú hích, có bao nhiêu tầng thì bấy nhiêu cú hích.</p><p>Đó là những khái niệm, định luật cơ bản mà tác giả đã sáng tạo ra. Những khái niệm hay quy luật đó nếu xảy ra thì vô cùng hợp lý phải không?</p><p>Tiếp theo, cùng điểm qua các nhân vật chính và cốt truyện đáng chú ý trong phim nhé: nhân vật chính là Cobb do Leonardo DiCaprio – tài tử HollyWood từng thủ vai Jack trong Titanic hay Jordan Belfort trong sói già phố wall, ngoài ra bạn của Cobb cũng là những tài tử điện ảnh khác ví dụ như anh chàng Venom đang hot gần đây…</p><p>Mở đầu phim Cobb được biết đến là một người chuyên nghiệp trong việc xâm nhập vào giấc mơ để đánh cắp thông tin và cấy thông tin vào người khác. Thế nhưng Cobb đang phải chạy trốn vì nghi án giết vợ mình!!! Vì thế mặc dù rất nhớ 2 con của mình nhưng anh không thể về nhà được. Cũng lúc này anh nhận được một phi vụ xâm nhập giấc mơ mà nếu thành công, anh được đảm bảo về với gia đình của mình mà không phải chạy trốn nữa. Đây cũng là phi vụ chính của phim. Cũng tại phi vụ này đã hé lộ nguyên nhân cái chết của cô vợ.</p><p>Cobb và bạn bè anh đã lên kế hoạch cho phi vụ của mình, mọi thứ diễn ra rất kịch tính, xét về tính hành động của phim thì mình đánh giá những cảnh quay hành động của phim rất ấn tượng, mặc dù những pha hành động đó diễn ra trong mơ. Tuy nhiên, như đã nói ở trên, định luật hấp dẫn trong mơ lại phụ thuộc vào đời thực hoặc phụ thuộc tầng phía trước. Do đó trong phim đã có những đoạn đánh nhau lơ lửng trong nhà rất thú vị =)) Kịch bản về phi vụ của Cobb cùng bạn bè cũng khá hay nhưng mình không đi sâu vào chi tiết. Ở đây mình muốn đi sâu vào chi tiết về thứ mà Cobb luôn giấu kín bạn bè, về nguyên nhân cái chết của người vợ mà anh vô cùng yêu quý.</p><p>Khi mà thế giới trong mơ dài hơn ngoài đời thực như vậy, thì Cobb đã có ý tưởng rằng cùng vợ mình đi sâu vào tầng 4 để sống cùng nhau đến già. Cả hai đã có với nhau những đứa con và sống đến già cõi trong mơ, một cuộc sống vô cùng hạnh phúc mà người vợ không muốn lìa xa. Đến một ngày Cobb muốn quay về với thế giới thực nên đã cấy vào đầu cô vợ ý tưởng rằng thế giới đang sống là giả, phải tự sát để về với thế giới thật. Cả 2 cùng nằm trên đường tàu đợi con tàu đến cán nát (đây cũng là lời giải thích cho hình ảnh con tàu chạy ở đầu phim). Cả hai cùng quay lại thế giới thực nhưng rồi điều không mong muốn xảy ra. Ý nghĩ phải tự sát để quay về thế giới thật trong đầu cô vợ vẫn chưa hết. Khi mà quá yêu cuộc sống trong thế giới mơ, cô vơ đã để lại tolem của mình trong thế giới đó, thì tại hiện thực, ý nghĩ trong đầu của cô vợ vẫn nghĩ rằng mình đang mơ. Dù cho Cobb có giải thích ra sao, thì cô vợ vẫn nghĩ là cần phải tự sát để quay về với thế giới thực. Rồi cuối cùng cô tự sát. Đó là nguyên nhân và cũng là điều làm Cobb hối tiếc. Anh luôn gặp vợ mình trong mọi giấc mơ của mình. Anh như muốn giam ký vợ mình trong mơ để cô ấy tiếp tục sống trong mơ với anh.</p><p>Những điểm cần suy nghĩ chưa rõ ràng (hoặc có thể khả năng của mình giới hạn chưa giải đáp được):</p><p>Thế giới hiện tại của Cobb là thật hay mơ? Khi mà cô vợ luôn nói thế giới hiện tại là mơ, Cobb cho là sai, nhưng làm sao chứng minh. Hơn nữa, ở cuối phim, khi Cobb được quay về gặp 2 cô con gái, anh đã thử quay tolem của mình. Con quay đó mãi không đổ!!!<br>Cảnh đầu phim cũng là cảnh kết thúc phim. Người cuối cùng trong giấc mơ mà Cobb gặp gỡ là một người đàn ông già cõi, vô cùng hối tiếng về cuộc đời. Cobb đến và nói với ông già rằng hãy cùng trở lại với thời trẻ trung. Phải chăng đấy lab Cobb??? No one knew?<br>Ở đời thực của ta, nếu tập cho mình ý niệm phân biệt có đang mơ hay không thì khi mơ liệu ta có thể áp dụng để biết mình đang mơ? Khi đang mơ mà biết mình đang mơ, liệu ta có thể tự tin làm được những điều ngu xuẩn? XD. Có bao giờ hai người cùng mơ một giấc mơ? Giá như có thể? Bạn sẽ muốn mơ cùng ai?</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Tản mạn ngày mưa - những điều nhận ra ngần đây</title>
      <link href="/2018/10/05/Tan-man-ngay-mua-nhung-dieu-nhan-ra-ngan-day/"/>
      <content type="html"><![CDATA[<p>Hôm nay trời đổ mưa, ngồi trong Lab lại hồi tưởng những ngày nào <del>“vui vẻ với nhau dưới mưa”</del>…<br>Ngày bé đi chăn trâu chăn bò, trời mưa thì tắm mưa cùng với mấy đứa bạn. Mưa ướt nhão cả ruộng khoai lang, mấy thằng cứ chơi đuổi nhau nát hết cả khoai mà vui v~ chưởng, có lẽ có ai đó sẽ không vui nhưng kệ :D.</p><p>Hồi đi học đại học, những hôm mưa ào ào lại thêm nhác đi học nên lủi ra quán nét đánh đế chế lại với “bạn”, <del>cảm giác được theo đuổi “đam mê” sướng lắm, khi theo đuổi đam mê ta quên đi thời gian trôi, quên đi nhọc nhằn đói khát, quên đi những bộn bề cuộc sống</del>… thú thực hồi đó nghiện game, vậy đó!</p><p>Hồi trước học đại học ở Hà Nội, sau khi ra trường thì đi làm ở Hà Nội luôn, khi ấy có cô bạn gái thỉnh thoảng sang chơi cuối tuần. Trời mưa lười đi chợ nấu cơm thì rủ nhau đi ăn quán. Hồi đó thi nhau lười thì phải, sao mà có mỗi nấu ăn cũng lười thế. Rồi có lần rủ ẻm đi chơi game luôn, <del>vừa được tiếng “đi chơi với người yêu” lại vừa được chơi điện tử =)) một công đôi việc</del>. Cơ mà đến giờ vẫn không hiểu sao ẻm lại đồng ý đi nét :v. Thôi kệ, vẫn vui.</p><p>Ngày trước vui bao nhiêu thì bây giờ mỗi lần trời mưa lại nhớ lại những điều đó nhiều bấy nhiêu. Bây giờ mọi thứ đó đã không còn nữa. Nhân tiện một ngày mưa ngồi suy nghĩ lung tung, viết lại đây một vài điều đã chiêm nghiệm, nhận ra gần đây (và nó chẳng liên quan gì đến những kỷ niệm trên XD):</p><h2 id="Cuoc-doi-khong-nen-tinh-theo-nam-thang-ma-tinh-theo-su-kien"><a href="#Cuoc-doi-khong-nen-tinh-theo-nam-thang-ma-tinh-theo-su-kien" class="headerlink" title="Cuộc đời không nên tính theo năm tháng, mà tính theo sự kiện."></a>Cuộc đời không nên tính theo năm tháng, mà tính theo sự kiện.</h2><p>Cuộc sống là biến đổi, theo triết học, sự thay đổi về lượng đủ lớn sẽ thay đổi về chất. Cuộc đời cũng thế, sự thay đổi đó được đánh dấu bằng thời những sự kiện, sau sự kiện đó bạn sẽ là một con người đã thay đổi, là version mới. Cuộc đời là từ lúc sinh đến hết đời có những sự kiện chính sau: (2) trải qua và có những kỷ niệm thời trẻ con, (2) tình đầu, (3) trải qua và có những kỷ niêm thời đi học, (4) đi làm, (5) làm một cái gì đó thực sự có ý nghĩa và để đời, (6) lập gia đình, (7)sinh con, (8) về già dưỡng lão rồi qua đời.<br>Những sự kiện trên mình liệt kê theo thứ tự thời gian chỉ riêng cái (5) thì xếp thứ tự nào cũng được vì có người cống hiến cho đời sớm như những tài năng thần đồng, có người về muộn rồi mới tỏa sáng.</p><p>Nếu ai đó đã trải qua những điều trên thì bạn đã sống hết đời rồi đó, dù bạn đang trẻ tầm 40 tuổi đi chăng nữa thì thời gian còn lại bạn cũng chỉ gọi là kéo dài sự sống để chờ chết thôi :p. Ngược lại những ai đã già rồi mà chưa trải qua hết những thứ trên, nghĩ mà coi bạn đã uổng phí cuộc đời, có lẽ chết già sẽ khó can tâm.</p><p>Khi nghĩ về mình thấy mình đã trải qua đến (4) sự kiện đầu tiên rồi. Nhận ra rằng mình đã sống được nửa cuộc đời rồi, omg!!!</p><p>Nhiều khi nghĩ những sự kiện trên xảy ra sớm thì tốt hay muộn thì tốt, khi nào nên xảy ra những sự kiện trên trong đời? Không biết, tùy mỗi người nhưng theo mình, mỗi sự kiện gì đi qua trong đời thì nó phải đáng giá, nó phải có ý nghĩa nhất định, không thể xuềnh xoàng được, ví dụ chuyện lập gia đình. không thể vội vội vàng vàng mà cưới vợ được trong khi mình chưa sẵn sàng. Sự kiện đó phải xảy ra khi thay đổi về lượng đến mức nhất định, có thể là khi yêu nhau quá lâu và cảm thấy yêu quá đủ rồi thì hẵng cưới. Đó là lý do tại sao nhiều người không muốn kết hôn sớm trong đó có mình. Kaka</p><h2 id="Song-cho-hien-tai-hay-song-vi-tuong-lai"><a href="#Song-cho-hien-tai-hay-song-vi-tuong-lai" class="headerlink" title="Sống cho hiện tại hay sống vì tương lai?"></a>Sống cho hiện tại hay sống vì tương lai?</h2><p>Biết là sống mà nghĩ tới tương lai tốt, vì biết trước mình muốn gì làm gì và sống có chủ đích. Tuy nhiên trong một lần ngồi uống trà nói chuyện với ông anh đang làm PHD ở Hàn (ông anh theo đạo phật) có nói với mình rằng: “em sống vì hiện tại trước mắt đi, nếu người ngồi đây mà tâm hồn cứ nghĩ về tương lai thì em không đang sống”.</p><p>Mình không hẳn hoàn toàn đồng ý nhưng điều đó làm mình nhận ra một điều. Suy nghĩ quá nhiều về tương lai đúng là không tốt. Suy nghĩ quá nhiều về tương lai làm ta sẽ cảm thấy tương lai rất quan trọng, quan trọng đến nối ta có thể bỏ qua những điều ở hiện tại. Tệ hơn là bỏ bê những việc ở hiện tại, đôi khi lại mơ mơ màng màng màng, làm việc không tập trung vào công việc, một ngày mà được có một vài tiếng tập trung còn lại đầu óc luôn bay bổng…</p><p>Nghĩ lại thì, hồi còn chưa vào đại học mình luôn nghĩ về cuộc sống sinh viên nhưng khi vào làm sinh viên mình lại không sống trọn thời sinh viên mà cứ mơ tưởng tới cuộc sống lúc đi làm. Rồi khi đi làm rồi mình lại mơ tưởng một cuộc sống của người đã thành công mà quên đi những mong ước mà ngày xưa mình mơ tưởng về cuộc sống đi làm. Khi chưa sang đây du học làm master ở Hàn, mình cũng mơ tưởng cuộc sống du học đẹp đẽ, nhưng khi đang học ở đây mình lại mơ tưởng cuộc sống sau khi làm xong master ở đây.</p><p>Câu nói của ông anh đúng là như gáo nước sôi tạt vào mặt cho mình suy nghĩ lại, và mình cảm thấy nên thay đổi một chút, sống vẫn nghĩ về tương lai nhưng phải sống trọn cho hiện tại. Như ai từng nói, hạnh phúc là cong đường ta đang đi, không phải là cái đích đến! Hơn nữa, sống thật trọn cho hiện tại, biết đâu lại mở ra những tương lai tươi mới hơn.</p><p>Nghĩ lại từ xưa đến nay mình toàn đứng thời điểm này mà cứ nghĩ về thời điểm nọ trong tương lai, do đó mình đã bỏ qua rất nhiều thứ quan trọng!</p><h2 id="Khi-cang-lon-suy-nghi-cua-dau-oc-ta-han-hep-lai-chang"><a href="#Khi-cang-lon-suy-nghi-cua-dau-oc-ta-han-hep-lai-chang" class="headerlink" title="Khi càng lớn, suy nghĩ của đầu óc ta hạn hẹp lại chăng?"></a>Khi càng lớn, suy nghĩ của đầu óc ta hạn hẹp lại chăng?</h2><p>Trước đây khi là trẻ con, ta hứng thú với mọi thứ, khi đụng vào thứ mới mẻ là sướng run. Nhưng bây giờ rất ngại đụng cái mới. Trong công việc của mình đụng vào một cái mới là mình cũng có chút ngại rồi. Trong cuộc sống thì còn nhiều thứ hơn, ví dụ mình sang Hàn nhưng mình rất ngại học tiếng Hàn vì thế mình đã quyết định không học 1 từ nào tiếng Hàn cả, nếu như thời bé có cơ hội đi như này có lẽ mình đã lao vào học và giờ chắc đủ dùng rồi :D Ngoài ra mình sang đây rất ngại ra ngoài, chỉ ngồi lab suốt ngày. Khi gặp một người lạ mình rất ngại làm quen vì nghĩ rằng ông kia thì có éo gì thú vị. Nhưng mình lại quên mất tất cả những người bạn mình hiện giờ, kể cả những người mình chơi thân thì ban đầu mới gặp mình cũng đã từng nghĩ như thế. Nên mình nhận ra mình đã không cởi mở lắm về việc kết bạn mới và có lẽ hơi sai sai. Nên thay đổi!!!</p><h2 id="Muon-thay-doi-the-gioi-truoc-het-thay-doi-ban-than-da"><a href="#Muon-thay-doi-the-gioi-truoc-het-thay-doi-ban-than-da" class="headerlink" title="Muốn thay đổi thế giới, trước hết thay đổi bản thân đã."></a>Muốn thay đổi thế giới, trước hết thay đổi bản thân đã.</h2><p>Cái này mình nhận ra khá lâu rồi, thực ra đọc được câu này thì lâu lắm rồi nhưng để hiểu thực sự ý nghĩa nó thì phải một thời gian sau đó. Giả dụ nếu bạn muốn làm một startup thì bạn phải lãnh đạo được cả startup đó một cách sáng suốt nhất. Bạn không thể làm được điều đó nếu như bạn không lãnh đạo được ngay cả chính bạn để bạn của ngày hôm nay tốt hơn bạn của hôm qua!</p><p>Như mình khi nhìn lại bản thân còn thấy chưa ổn, do đó thay vì thay đổi thế giới, phải thay đổi bản thân mình trước. Thay vì tạo ra một danh sách những mục tiêu thay đổi thế giới, phải tạo ra một danh sách những việc hại bản thân cần tránh làm đã. Ví dụ như không được thức khuya quá 2h sáng, không được nhịn sáng, không được trì trệ, không được làm sơ sài dù là việc nhỏ, không được nhậu hơn 2 lần trong một tuần, <del>không được đánh bạn bè</del> -_-…</p><h2 id="Ket"><a href="#Ket" class="headerlink" title="Kết"></a>Kết</h2><p>Đối với mình, sự trưởng thành là khi ta nhận ra được những triết lý nhỏ nhặt trong cuộc sống. Khi ta nhận ra được một điều gì đó mới mẻ thì khi đó ta đã phát triển hơn một chút. Con người không như sỏi đá, nếu cứ khư khư không nhận ra được điều gì đó hay ho hoặc kể cả củ chuốt thì bạn sẽ như cái máy thôi (<del>yêu mà không nhận ra mình bị cắm sừng thì gọi là ngưu ma vương</del> :p), không phát triển được.</p><p>Những CEO lớn hiện nay hoặc những nhà bác học thường sẽ có vô vàn triết lý sống mà họ chiêm nghiệm được trong cuộc đời của họ, đó là lý do vì sao những người đó nói chuyện rất thú vị bởi vì khi họ nói ta mới ngỡ ra được những triết lý đó, nó là điều mới mẻ với ta nên ta cảm thấy hay =))</p><p>Ngày trước khi còn có bạn gái, mình có lần đã từng nói với ẻm là sau này chúng ta sẽ sống cùng nhau và cùng chiêm nghiệm ra những điều hay ho trong cuộc sống =)) không biết ẻm có hiểu được ý mình không =)) Dù sao thì điều mình muốn nói cuối cùng trong bài viết này đó là hãy cố gắng suy nghĩ và chiêm nghiệm để nhận ra được những triết lý sống của mình vì nó giúp ta trưởng thành hơn. Hy vọng những điều mình đã nhận ra trên đây sẽ giúp được bạn nhận ra được thứ gì đó trong cuộc đời bạn. Good luck and have fun!</p>]]></content>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hướng dẫn tạo blog với Hexo và GithubPage cho dân code</title>
      <link href="/2018/03/18/huong-dan-tao-blog-voi-Hexo-va-GithubPage-cho-dan-code/"/>
      <content type="html"><![CDATA[<p><img src="github_hexo_blog.png" alt="preview"></p><h2 id="Tai-sao-dan-code-nen-viet-blog"><a href="#Tai-sao-dan-code-nen-viet-blog" class="headerlink" title="Tại sao dân code nên viết blog?"></a>Tại sao dân code nên viết blog?</h2><ul><li><p>Ghi nhớ! Blog giống như sổ tay để ta ghi lại mọi thứ hay ho như kiến thức mình học được, câu chuyện cười hoặc là có thể dùng để viết nhật ký.</p><p>  Blog còn hơn cả sổ tay ở chỗ là có thể đọc qua mạng, dễ dàng share cho bạn bè, người lạ mặt ở trên thế giới có thể tìm đến blog nhờ công cụ tìm kiếm như Google.</p></li><li><p>Luyện tập diễn giải sự việc theo cách trình bày của chính mình. Mọi vấn đề đều có cách để diễn dãi nó một cách dễ hiểu, nếu bạn không làm được điều đó thì chứng tỏ bạn chưa hiểu vấn đề.</p><p>  Nhiều lúc khi xem lời giải của một bài toán ta cứ gật gù rằng “đúng rồi, hóa ra đơn giản vậy” thế nhưng khi để tự mình diễn giải lại lời giải đó thì ta không làm được. Đó là do khi bạn đọc lời giải bạn đang đọc “cách hiểu của tác giả” chứ chưa phải là bạn hiểu! Vậy nên cho đến khi bạn đặt bút xuống diễn giải lại được thì lúc đó bạn mới thực sự hiểu lời giải của vấn đề!</p></li><li>Thể hiện tiếng nói của mình. Nói cách khách là kênh phát ngôn. Ngày nay mạng xã hội phát triển như Facebook có là nơi lý tưởng để viết bài và đó cũng là kênh phát ngôn của bạn. Đối với dân code như mình thì khi follow một người nổi tiếng nào đó trong lĩnh vực IT thì mình thường tìm đến blog của họ thay vì tìm đến trang cá nhân của họ trên mạng xã hội, đơn giản là blog thể hiện tiếng nói và tính cách của họ nhiều hơn là những thứ họ viết trên mạng xã hội.</li><li><p>“Đức” cho người khác. Nếu ai nằm vùng VOZ nhiều thì không lạ gì từ “đức” này mà mỗi khi có một post hay hoặc một post bóc phốt có ảnh là các VOZer vào đọc đầu tiên trong post ấy thường vào “quote” lại bài viết ngay để lỡ bài viết có bị sửa đi thì những người vào sau có thể xem được bài gốc. Đấy gọi là đức, xuất phát từ “làm phúc làm đức” :) </p><p>  Đối với viết blog cũng là “đức” vì những thứ mình viết lại biết đâu lại giúp ích cho người khác! </p></li></ul><h2 id="3-ly-do-dan-code-chon-Hexo-va-Github-Pages"><a href="#3-ly-do-dan-code-chon-Hexo-va-Github-Pages" class="headerlink" title="3 lý do dân code chọn Hexo và Github Pages"></a>3 lý do dân code chọn Hexo và Github Pages</h2><ul><li>Đơn giản và quen thuộc đối với dân code. Đối với dân code thì code và commit code thực sự quá quen thuộc. Làm blog với <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> và <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> đơn giản là vì thao tác chính chỉ liên quan đến viết, commit, run lệnh =) mà không phải sử dụng giao diện đồ sộ như Wordpress.</li><li>Nhanh! Bạn có thể deploy blog chỉ khoảng 10 phút cài đặt.</li><li><p>Miễn phí nhưng chất lượng. Cả <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> và <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> đều miễn phí, không tốn một xu. Ngoài ra blog trên Github Page không bị chèn quảng cáo, server trâu của github không sợ bị DDos.</p><p>  Ngoài ra một lý do mình chọn <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> cho blog của mình vì framework này chạy trên NodeJs - nền tảng mà mình đã biết. Đối với những ai biết python thì có <a href="https://getpelican.com" target="_blank" rel="noopener">Pelican</a> hoặc Rubby thì có <a href="https://jekyllrb.com" target="_blank" rel="noopener">jekyll</a>, Golang thì có <a href="https://gohugo.io" target="_blank" rel="noopener">Hugo</a>… cũng tương tự như Hexo - đều là Static Web Generator.  </p></li></ul><h2 id="Huong-dan-tao-blog-bang-Hexo-va-Github-Pages"><a href="#Huong-dan-tao-blog-bang-Hexo-va-Github-Pages" class="headerlink" title="Hướng dẫn tạo blog bằng Hexo và Github Pages"></a>Hướng dẫn tạo blog bằng Hexo và Github Pages</h2><p>Bản chất đơn giản như sau:</p><ul><li>Github pages là dịch vụ host static web tức là các file html tĩnh và cho luôn bạn tên miền rất đẹp kiểu như <a href="https://developerkeep.github.io" target="_blank" rel="noopener">developerkeep.github.io</a>. Sau khi đăng ký tài khoản github page thì bạn hoàn toàn tống bất cứ thứ gì đó như html, css, js lên repo của nó thì ta sẽ được 1 trang web tĩnh.”</li><li>Hexo là static web generator tức là thằng xuất blog chạy trên nodejs ra blog dạng tĩnh. Thứ mà <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> xuất ra này lại có thể đem commit lên <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> để host trên đấy và thế là có blog =))’</li></ul><h3 id="Cai-dat-moi-truong"><a href="#Cai-dat-moi-truong" class="headerlink" title="Cài đặt môi trường"></a>Cài đặt môi trường</h3><p>Để chạy được hexo trước tiên bạn cần cài đặt <a href="https://nodejs.org" target="_blank" rel="noopener">NodeJs</a>, bản nào cũng được nhé. Recommend bản mới nhất nhé =)</p><p>Sau khi cài đặt xong ta cài đặt hexo-cli:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Nếu bạn chưa có git thì cài đặt git nhé. Ở bài này mình viết cho dân code mặc định là đã biết sử dụng git. Còn nếu bạn chưa biết git thì tốt hơn bạn nên học sử dụng git với một số thao tác cơ bản trước rồi hãy làm blog theo bài này.</p><h3 id="Tao-blog-run-local"><a href="#Tao-blog-run-local" class="headerlink" title="Tạo blog run local"></a>Tạo blog run local</h3><p>Tạo một thư mục chứa blog của bạn, tại thư mục này chạy lệnh sau để khởi tạo một blog hexo:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure> <p>Chạy blog ở local:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>Mở trình duyệt và truy cập địa chỉ <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> để xem kết quả!</p><h3 id="Dang-ky-Github-Pages"><a href="#Dang-ky-Github-Pages" class="headerlink" title="Đăng ký Github Pages"></a>Đăng ký Github Pages</h3><p>Đăng ký Github Pages cực kỳ đơn giản, bạn đăng ký một tài khoản github vd: developerkeep. Thì blog của bạn sẽ có địa chỉ truy cập là <a href="http://developerkeep.github.io" target="_blank" rel="noopener">http://developerkeep.github.io</a>. Chi tiết xem hướng dẫn trên trang chủ <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a>.</p><h3 id="Sinh-web-tinh-va-deploy-len-github-pages"><a href="#Sinh-web-tinh-va-deploy-len-github-pages" class="headerlink" title="Sinh web tĩnh và deploy lên github pages"></a>Sinh web tĩnh và deploy lên github pages</h3><p>Giả sử bạn đã đăng ký được github page. Bây giờ ta sẽ tạo web tĩnh từ <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> và deploy lên <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a>.<br><a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> cung cấp một file cấu hình _config.yml ở thư mục gốc của blog. Tại thư mục này ta cấu hình để deploy như sau:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">    repo:</span> <span class="attr">https://github.com/developerkeep/developerkeep.github.io.git</span></span><br></pre></td></tr></table></figure><p>Ta chỉ ra rằng sẽ deploy bằng git và nơi sẽ deploy là repo <a href="https://github.com/developerkeep/developerkeep.github.io.git" target="_blank" rel="noopener">https://github.com/developerkeep/developerkeep.github.io.git</a><br>Cài đặt thư viện <code>hexo-deployer-git</code> để có thể deploy:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git -save</span><br></pre></td></tr></table></figure><p>Cuối cùng thực hiện deploy bằng lệnh sau:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>Lúc này Hexo sẽ sinh web tĩnh ra và push lên repo của chúng ta đa đăng ký. Xong, bây giờ blog của chúng ta đã có trên github page và có thể truy cập được rồi.<br>Rất đơn giản phải không!</p><h3 id="Hexo-theme"><a href="#Hexo-theme" class="headerlink" title="Hexo theme"></a>Hexo theme</h3><p>Bất cứ Blog framework nào cũng sẽ hỗ trợ theme cho bạn lựa chọn. <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> cũng vậy, có một tá theme ở <a href="https://hexo.io/themes/index.html" target="_blank" rel="noopener">đây</a>. Hầu như các theme ở đấy đều miễn phí và mã nguồn mỡ trên github.</p><p>Cài đặt theme ra sao? Thư mục theme ở /thư mục gốc/themes. trong thư mục này mỗi thư mục con là một theme. Vậy nên để cài đặt theme mới thì việc đầu tiên là bạn phải clone code theme đó vào thư mục themes của Hexo. Ví dụ mình sử dụng theme cactus thì thư mục sẽ như sau:</p><p><img src="theme-directory.png" alt="hexo theme folder"></p><p>Cấu hình để Hexo nhận theme vừa tải về như sau: giả sử bạn vừa tải về theme <code>cactus</code>. Bây giờ mở file <code>_config.yml</code> trong thư mục blog ra. Sử dòng cấu hình theme thành như sau:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">cactus</span></span><br></pre></td></tr></table></figure></p><p>Ok. Chạy lại <code>hexo server</code> để xem kết quả! </p><p>Lưu ý, một điều rất hay ở đây là hexo tách mỗi theme ra thành một project riêng, có <code>package.json</code> riêng, có <code>_config.yaml</code> riêng vì thế rất rõ ràng và tiện lợi, nếu bạn cài đặt theme khác thì chú ý tài liệu của theme để cấu hình theme cho đúng nhé. </p><h3 id="Viet-bai-va-public"><a href="#Viet-bai-va-public" class="headerlink" title="Viết bài và public"></a>Viết bài và public</h3><p>Phần liên quan nhất tới viết blog, viết ở đâu, ra sao? Hexo hỗ trợ viết bài với định dạng <code>markdown</code>. Khi tạo bài viết mới bằng lệnh:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new &quot;hello world&quot;</span><br></pre></td></tr></table></figure><p>Hexo sẽ sinh ra 1 file mang tên hello-world.md ở thư mục /source/_post và thư mục chứa assest của post đó là /source/_post/hello-world/. Khi bạn viết nhiều bài, thư mục bài viết của bạn sẽ kiểu như sau:</p><p><img src="post-directory.png" alt="thư mục bài viết Hexo"></p><p>Để có thể viết bài thì bạn chỉ cần mở file .md đó bằng bất cứ trình soạn thảo <code>markdown</code> nào cũng được hoặc là notepad++ =))<br> Bạn nên xem qua hướng dẫn trên trang chủ của hexo về format viết bài.</p><p>Public bài như thế nào? wow đây là việc cuối cùng cần làm để đưa bài viết lên <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a> và có thể <code>share</code> cho bạn bè đọc rồi. Đơn giản, bạn chỉ cần chạy lại lệnh deploy <code>hexo deploy</code> thì hexo sẽ tự động làm việc đó cho bạn.</p><p>Bản chất thì hexo sẽ sinh ra file .html tĩnh tương ứng với bài viết .md của bạn. </p><p><img src="hexo-public-folder.png" alt="Thư mục public của Hexo"></p><p>Sau khi sinh ra file html tĩnh thì hexo mang đống này commit lên <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a>. Như vậy là xong quá trình deploy.</p><p>Có một điều mình thích ở hexo là giúp đơn giản hóa quá trình viết bài, ngày xưa mình viết trên <code>wordpress</code> phải tải ảnh từng cái từng cái, xong rồi chỉnh link cho đúng, mà sửa online chứ không sửa local nên bất tiện là load rất chậm. Còn với <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a> thì mình chỉ cần cho vào thư mục asset mà <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> đã sinh ra, khi <code>deploy</code> thì chỉ cần 1 câu lệnh là toàn bộ ảnh được <code>upload</code> lên luôn.<br>Nhanh mà thuận tiện.</p><p>Một điều nữa là việc lưu trữ mã nguồn và rất là ưa đó là viết bài và test bài viết nhanh chóng ở local, code mã nguồn cũng có thể cất giữ cẩn thận trên <code>gitlab</code> với chế độ private. Còn phần sinh ra static web thì public lên <a href="https://pages.github.com/" target="_blank" rel="noopener">Github pages</a> rất gọn nhẹ tiện dụng.</p><p>Xong! Cuối cùng thì cũng kết bài =))</p><p>Nếu bạn đã từng muốn làm cho mình một blog nhưng ngại cài đặt thì bây giờ bạn còn chờ gì nữa mà không lao vào thử luôn với <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a> và <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Page</a>. Nếu có khó khăn thì hãy comment ở dưới mình sẽ hỗ trợ bạn. Chúc bạn thành công!</p>]]></content>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> hexo </tag>
            
            <tag> github pages </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Nhật ký đi làm chỉ bằng một bức ảnh</title>
      <link href="/2017/10/09/nhat-ky-di-lam-chi-bang-mot-buc-anh/"/>
      <content type="html"><![CDATA[<p>Đây là nhật ký đi làm của mình:<br><img src="TestPolim-1.jpg" alt=""><br>Đây gọi là dev sml ra!</p>]]></content>
      
      
        <tags>
            
            <tag> Funny </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Copy object trong javascript</title>
      <link href="/2017/10/09/copy-object-trong-javascript/"/>
      <content type="html"><![CDATA[<h3 id="Object-don-gian"><a href="#Object-don-gian" class="headerlink" title="Object đơn giản"></a>Object đơn giản</h3><p>Trong Javascript có rất nhiều cách để copy một đối tượng, ví dụ 1 trong các cách là sử dụng chức năng phân rã object của Javascript:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> srcObj = &#123;</span><br><span class="line">data: <span class="string">'someData'</span>,</span><br><span class="line">text: <span class="string">'someText'</span>,</span><br><span class="line">number: <span class="string">'someNumber'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> copyObj = &#123;...srcObj&#125;; <span class="comment">// phân rã object</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(copyObj));</span><br></pre></td></tr></table></figure><p>kết quả </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;data&quot;:&quot;someData&quot;,&quot;text&quot;:&quot;someText&quot;,&quot;number&quot;:&quot;someNumber&quot;&#125;</span><br></pre></td></tr></table></figure><h3 id="Object-phuc-tap-object-dang-long-nhau"><a href="#Object-phuc-tap-object-dang-long-nhau" class="headerlink" title="Object phức tạp, object dạng lồng nhau"></a>Object phức tạp, object dạng lồng nhau</h3><p>Ở dạng lồng nhau kiểu:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> srcObj = &#123;</span><br><span class="line">    value: <span class="number">1</span>,</span><br><span class="line">    obj: &#123;</span><br><span class="line">        valueChild: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Với dạng này sử dụng copy bình thường như cách trên thì ta vẫn copy được object đấy, tuy nhiên thứ sao chép được chỉ là những thuộc tính nằm ở lớp đầu tiên của <code>srcObj</code> thôi. Vậy nên nếu thuộc tính lớp đầu tiên này là một object thì nó chỉ copy con trỏ tới object con <code>srcObj.obj</code> đó:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> copyObj = &#123;...srcObj&#125;; <span class="comment">// copy theo kiểu phân rã</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(copyObj)); <span class="comment">// in copy ra</span></span><br><span class="line"></span><br><span class="line">    srcObj.obj.valueChild = <span class="number">12345</span>; <span class="comment">// thay đổi thuộc tính của lớp con của obj src</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(copyObj)); <span class="comment">// in copy ra lần 2</span></span><br></pre></td></tr></table></figure><p>Kết quả là:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;value&quot;:1,&quot;obj&quot;:&#123;&quot;valueChild&quot;:2&#125;&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;value&quot;:1,&quot;obj&quot;:&#123;&quot;valueChild&quot;:12345&#125;&#125;</span><br></pre></td></tr></table></figure><p>Thấy chưa, object copy <code>copyObj</code> bị thay đổi giá trị khi thay đổi giá trị ở object nguồn <code>srcObj</code>.<br>Vì vậy chúng ta khi code javascript cần chú ý về copy object. Nếu object có nhiều tầng mà cứ copy kiểu như vậy thì có thể một ngày nào đó bạn sẽ không biết tại sao dữ liệu tự nhiên bị thay đổi một cách thần kỳ!</p><h3 id="Deep-copy"><a href="#Deep-copy" class="headerlink" title="Deep copy"></a>Deep copy</h3><p>Với những ứng dụng thực tế thì các object lồng nhau là chuyện bình thường, đôi lúc chúng ta cần phải copy object như thế thì phải làm thế nào?</p><ul><li><p>Tự viết hàm copy object: chúng ta có thể viết hàm duyệt toàn bộ object và copy nội dung của nó từ gốc đến ngọn</p></li><li><p>Sử dụng thư viện chuyên biệt: có một số thư viện làm điều này cho chúng ta và cung cấp hàm để sử dụng một cách đơn giản: <code>lodash</code> (<code>underscore</code>)</p></li><li><p>Sử dụng thư viện <code>Imutable</code>: cũng là thư viện nhưng mình tách thể loại này ra vì nó là thư viện đặc biệt, nhất là với những ai làm ứng dụng có sử dụng redux. Imutable tạo ra object mà ta không thể thay đổi dữ liệu của nó được, mỗi lần thay đổi sẽ tạo ra một object copy mới (thuật toán copy của nó tối ưu, không phải đi copy toàn bộ từ đầu đến cuối).</p></li></ul><p>Chi tiết các thư viện nhắc đến trên đã có đầy đủ tài liệu mạng, trong phạm vi bài này mục đích mình chỉ ra việc cần thận trọng trong việc copy các object lồng nhau thôi. </p><p>Bài viết đến đây là hết, hi vọng giúp ích một phần cho bạn trong quá trình học Jav*script</p>]]></content>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Code nhanh hơn với VA Snippets của Visual Assist X trong Visual Studio</title>
      <link href="/2017/10/07/code-nhanh-hon-voi-va-snippets-cua-visual-assist-x-trong-visual-studio/"/>
      <content type="html"><![CDATA[<h2 id="Plugin-Visual-Assist-X-than-thanh"><a href="#Plugin-Visual-Assist-X-than-thanh" class="headerlink" title="Plugin Visual Assist X thần thánh"></a>Plugin Visual Assist X thần thánh</h2><p>Như các bạn đã biết Visual Assist X là một Plugin rất mạnh mẽ dùng cho Microsoft Visual Studio.</p><p>Visual Assist X giúp cho việc hiển thị rõ ràng các từ khóa của ngôn ngữ lập trình(thông qua màu sắc của các biến, kiểu dữ liệu, hàm, từ khoá..).</p><p>Visual Assist X cung cấp khả năng đề xuất code, refactoring code, tự động điền tên biến, tên hàm chỉ sau khi gõ 1 vài ký tự, hiển thị các prototype của một hàm. Tìm kiếm các reference của hàm, biết một cách chi tiết giúp lập trình viên có thể thao tác, review code thuận tiện.</p><p>Đó là các chức năng nổi tiếng chắc ai cũng biết. Hôm nay mình sẽ giới thiệu cho các bạn một chức năng nhỏ của Visual Assist  có thể ít người để ý đến. Nhưng khi biết chức năng này, bạn sẽ tạo ra các comment nhanh hơn, đẹp hơn và giảm các thao tác lặp đi lặp lại đó chính là chức năng <strong>VA Snippets</strong>.</p><h2 id="Chuc-nang-Snippet-cua-Vissual-Assist-X"><a href="#Chuc-nang-Snippet-cua-Vissual-Assist-X" class="headerlink" title="Chức năng Snippet của Vissual Assist X"></a>Chức năng Snippet của Vissual Assist X</h2><p>Chức năng này cơ chế ngắn gọn như sau: bạn tạo ra một snippett có shortcut gán với một đoạn code nào đó muốn sinh ra. Sử dụng bằng cách chỉ cần việc gõ shortcut, ngay lập tức VA hiển thị gợi ý ra code đó. Bạn chỉ cần Enter là có ngay code đó.<br><img src="snippet.gif" alt="The Ghost Logo"></p><h2 id="Cach-them-hoac-sua-mot-snippet-trong-Visual-Assist-X"><a href="#Cach-them-hoac-sua-mot-snippet-trong-Visual-Assist-X" class="headerlink" title="Cách thêm hoặc sửa một snippet trong Visual Assist X"></a>Cách thêm hoặc sửa một snippet trong Visual Assist X</h2><p>Để thêm hoặc sửa các snippet đã có sẵn bạn vào menu VASSISX -&gt; Visual Assist Options…<br><img src="menu-to-VA-options.png" alt="menu to VA options"></p><p>Trong hộp thoại Visual Assist Options chọ mục Suggestions và chọn Edit VA Snippets.</p><p><img src="VA-Option.png" alt="VA Option"></p><p> Hộp thoại VA Snippet Editor xuất hiện:<br><img src="VA-Snippet-Editor.png" alt="VA Snippet Editor"></p><p>Clink vào (1) để thêm mới hoặc chọn 1 trong các mục ở danh sách các snippet ở dưới để sửa.</p><p>Ở mục (2) là điền shortcut, như hình ví dụ mình chọn là /** . Ở mục (3) là điền code cần tạo ra. Ở đây mình chọn sinh ra một mẫu comment đầu hàm mà mình hay dùng.</p><p>Một điều hay ho ở snippet khiến mình thấy thích thú đó là các biến mà VA cung cấp ở mục (4). VA cung cấp rất nhiều biến như ngày tháng, tên file, tab…</p><p>Ở đây ví dụ mình chọn biến $DATE$ để hiển thị ngày tháng hiện tại, biến $end$ để sau khi sinh ra code thì con trỏ chuột đặt vào vị trí đó để mình thêm thông tin.</p><p>Kết quả sau khi chỉ gõ shortcut và ấn enter:</p><p><img src="result.png" alt=""></p><p>Đối với mình sử dụng chức năng này sẽ giúp mình bớt nhàm chán khi phải gõ đi gõ lại trong những đoạn code không cần thiết trong khi mình muốn tập trung vào code chính. Những kỹ năng nho nhỏ như thế này hi vọng sẽ giúp bạn code cool hơn.<br>Nếu thấy hay ho và có ích hãy like và share giúp mình hoặc comment nhữ kỹ năng mà bạn biết thêm ở dưới nhé!</p>]]></content>
      
      
        <tags>
            
            <tag> -tools -visual studio -visual assist </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>privacy</title>
      <link href="/2016/01/01/privacy/"/>
      <content type="html"><![CDATA[<h1 id="PRIVATE-POLICY"><a href="#PRIVATE-POLICY" class="headerlink" title="PRIVATE POLICY"></a>PRIVATE POLICY</h1><h2 id="What-is-this-Privacy-Policy-for"><a href="#What-is-this-Privacy-Policy-for" class="headerlink" title="What is this Privacy Policy for?"></a>What is this Privacy Policy for?</h2><p>This privacy policy is for this website [developerkeep.com] and served by [Noi Quang Truong] and governs the privacy of its users who choose to use it.</p><p>The policy sets out the different areas where user privacy is concerned and outlines the obligations &amp; requirements of the users, the website and website owners. Furthermore the way this website processes, stores and protects user data and information will also be detailed within this policy.</p><h2 id="The-Website"><a href="#The-Website" class="headerlink" title="The Website"></a>The Website</h2><p>This website and its owners take a proactive approach to user privacy and ensure the necessary steps are taken to protect the privacy of its users throughout their visiting experience. This website complies to all UK national laws and requirements for user privacy.</p><h2 id="Use-of-Cookies"><a href="#Use-of-Cookies" class="headerlink" title="Use of Cookies"></a>Use of Cookies</h2><p>This website uses cookies to better the users experience while visiting the website. Where applicable this website uses a cookie control system allowing the user on their first visit to the website to allow or disallow the use of cookies on their computer / device. This complies with recent legislation requirements for websites to obtain explicit consent from users before leaving behind or reading files such as cookies on a user’s computer / device.</p><p>Cookies are small files saved to the user’s computers hard drive that track, save and store information about the user’s interactions and usage of the website. This allows the website, through its server to provide the users with a tailored experience within this website.<br>Users are advised that if they wish to deny the use and saving of cookies from this website on to their computers hard drive they should take necessary steps within their web browsers security settings to block all cookies from this website and its external serving vendors.</p><p>This website uses tracking software to monitor its visitors to better understand how they use it. This software is provided by Google Analytics which uses cookies to track visitor usage. The software will save a cookie to your computers hard drive in order to track and monitor your engagement and usage of the website, but will not store, save or collect personal information. You can read Google’s privacy policy here for further information [<a href="http://www.google.com/privacy.html" target="_blank" rel="noopener">http://www.google.com/privacy.html</a> ].</p><p>Other cookies may be stored to your computers hard drive by external vendors when this website uses referral programs, sponsored links or adverts. Such cookies are used for conversion and referral tracking and typically expire after 30 days, though some may take longer. No personal information is stored, saved or collected.</p><h2 id="Contact-amp-Communication"><a href="#Contact-amp-Communication" class="headerlink" title="Contact &amp; Communication"></a>Contact &amp; Communication</h2><p>Users contacting this website and/or its owners do so at their own discretion and provide any such personal details requested at their own risk. Your personal information is kept private and stored securely until a time it is no longer required or has no use, as detailed in the Data Protection Act 1998. Every effort has been made to ensure a safe and secure form to email submission process but advise users using such form to email processes that they do so at their own risk.</p><p>This website and its owners use any information submitted to provide you with further information about the products / services they offer or to assist you in answering any questions or queries you may have submitted. This includes using your details to subscribe you to any email newsletter program the website operates but only if this was made clear to you and your express permission was granted when submitting any form to email process. Or whereby you the consumer have previously purchased from or enquired about purchasing from the company a product or service that the email newsletter relates to. This is by no means an entire list of your user rights in regard to receiving email marketing material. Your details are not passed on to any third parties.</p><h2 id="Email-Newsletter"><a href="#Email-Newsletter" class="headerlink" title="Email Newsletter"></a>Email Newsletter</h2><p>This website operates an email newsletter program, used to inform subscribers about products and services supplied by this website. Users can subscribe through an online automated process should they wish to do so but do so at their own discretion. Some subscriptions may be manually processed through prior written agreement with the user.</p><p>Subscriptions are taken in compliance with UK Spam Laws detailed in the Privacy and Electronic Communications Regulations 2003. All personal details relating to subscriptions are held securely and in accordance with the Data Protection Act 1998. No personal details are passed on to third parties nor shared with companies / people outside of the company that operates this website. Under the Data Protection Act 1998 you may request a copy of personal information held about you by this website’s email newsletter program. A small fee will be payable. If you would like a copy of the information held on you please write to the business address at the bottom of this policy.</p><p>Email marketing campaigns published by this website or its owners may contain tracking facilities within the actual email. Subscriber activity is tracked and stored in a database for future analysis and evaluation. Such tracked activity may include; the opening of emails, forwarding of emails, the clicking of links within the email content, times, dates and frequency of activity [this is by no far a comprehensive list].<br>This information is used to refine future email campaigns and supply the user with more relevant content based around their activity.</p><p>In compliance with UK Spam Laws and the Privacy and Electronic Communications Regulations 2003 subscribers are given the opportunity to un-subscribe at any time through an automated system. This process is detailed at the footer of each email campaign. If an automated un-subscription system is unavailable clear instructions on how to un-subscribe will by detailed instead.</p><h2 id="External-Links"><a href="#External-Links" class="headerlink" title="External Links"></a>External Links</h2><p>Although this website only looks to include quality, safe and relevant external links, users are advised adopt a policy of caution before clicking any external web links mentioned throughout this website. (External links are clickable text / banner / image links to other websites, similar to; <a href="http://www.craftykingsboutique.co.uk" target="_blank" rel="noopener">www.craftykingsboutique.co.uk</a> or Kings Trains Models.)</p><p>The owners of this website cannot guarantee or verify the contents of any externally linked website despite their best efforts. Users should therefore note they click on external links at their own risk and this website and its owners cannot be held liable for any damages or implications caused by visiting any external links mentioned.</p><h2 id="Adverts-and-Sponsored-Links"><a href="#Adverts-and-Sponsored-Links" class="headerlink" title="Adverts and Sponsored Links"></a>Adverts and Sponsored Links</h2><p>This website may contain sponsored links and adverts. These will typically be served through our advertising partners, to whom may have detailed privacy policies relating directly to the adverts they serve.</p><p>Clicking on any such adverts will send you to the advertisers website through a referral program which may use cookies and will track the number of referrals sent from this website. This may include the use of cookies which may in turn be saved on your computers hard drive. Users should therefore note they click on sponsored external links at their own risk and this website and its owners cannot be held liable for any damages or implications caused by visiting any external links mentioned.</p><h2 id="Social-Media-Platforms"><a href="#Social-Media-Platforms" class="headerlink" title="Social Media Platforms"></a>Social Media Platforms</h2><p>Communication, engagement and actions taken through external social media platforms that this website and its owners participate on are custom to the terms and conditions as well as the privacy policies held with each social media platform respectively.</p><p>Users are advised to use social media platforms wisely and communicate / engage upon them with due care and caution in regard to their own privacy and personal details. This website nor its owners will ever ask for personal or sensitive information through social media platforms and encourage users wishing to discuss sensitive details to contact them through primary communication channels such as by telephone or email.</p><p>This website may use social sharing buttons which help share web content directly from web pages to the social media platform in question. Users are advised before using such social sharing buttons that they do so at their own discretion and note that the social media platform may track and save your request to share a web page respectively through your social media platform account.</p><h2 id="Shortened-Links-in-Social-Media"><a href="#Shortened-Links-in-Social-Media" class="headerlink" title="Shortened Links in Social Media"></a>Shortened Links in Social Media</h2><p>This website and its owners through their social media platform accounts may share web links to relevant web pages. By default some social media platforms shorten lengthy urls [web addresses] (this is an example: <a href="http://bit.ly/zyVUBo)" target="_blank" rel="noopener">http://bit.ly/zyVUBo)</a>.</p><p>Users are advised to take caution and good judgement before clicking any shortened urls published on social media platforms by this website and its owners. Despite the best efforts to ensure only genuine urls are published many social media platforms are prone to spam and hacking and therefore this website and its owners cannot be held liable for any damages or implications caused by visiting any shortened links.</p>]]></content>
      
      
    </entry>
    
  
  
</search>
